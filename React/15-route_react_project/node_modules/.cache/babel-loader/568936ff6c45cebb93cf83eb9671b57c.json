{"ast":null,"code":"var _jsxFileName = \"/home/ree/WORKSPACE/TECH/React/15-route_react_project/src/pages/QuotesDetail.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from \"react\";\nimport { Route, useParams, Link, useRouteMatch } from \"react-router-dom\";\nimport Comments from \"../components/comments/Comments\";\nimport useHttp from \"../hooks/use-http\";\nimport { getSingleQuote } from \"../lib/api\";\nimport HighlightedQuote from \"../components/quotes/HighlightedQuote\";\nimport LoadingSpinner from \"../components/UI/LoadingSpinner\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DUMMY_QUOTES = [{\n  id: \"q1\",\n  author: \"Max\",\n  text: \"Learning React is Fun!\"\n}, {\n  id: \"q2\",\n  author: \"Maximilian\",\n  text: \"Learning React is Great!\"\n}];\n\nconst Quotesdetail = () => {\n  _s();\n\n  // useRouteMath\n  // 중첩라우팅을 쉽게사용하기위함\n  // url정보 뿐아니라 라우터 내부에서 관리되는 데이터를 보기위함\n  const match = useRouteMatch();\n  const params = useParams();\n  const {\n    quoteId\n  } = params;\n  const {\n    sendRequest,\n    status,\n    data: loeadedQuote,\n    error\n  } = useHttp(getSingleQuote, true);\n  useEffect(() => {\n    sendRequest(quoteId);\n  }, [sendRequest, quoteId]);\n\n  if (status === \"pending\") {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"centered\",\n      children: /*#__PURE__*/_jsxDEV(LoadingSpinner, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this);\n  }\n\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"centered\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 12\n    }, this);\n  }\n\n  const quote = DUMMY_QUOTES.find(quote => quote.id === params.quoteId);\n  console.log(match);\n\n  if (!loeadedQuote) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No quote Found!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 12\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(HighlightedQuote, {\n      text: quote.text,\n      author: quote.author\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Route, {\n      path: `${match.path}`,\n      exact: true,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"centered\",\n        children: /*#__PURE__*/_jsxDEV(Link, {\n          className: \"btn--flat\",\n          to: `/quotes/${params.quoteId}/comments`,\n          children: \"Load Comments\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Route, {\n      path: `${match.path}/comments`,\n      children: /*#__PURE__*/_jsxDEV(Comments, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Quotesdetail, \"JrBtohLMRTPUpLhDnbd/cGZH1Sc=\", false, function () {\n  return [useRouteMatch, useParams, useHttp];\n});\n\n_c = Quotesdetail;\nexport default Quotesdetail;\n\nvar _c;\n\n$RefreshReg$(_c, \"Quotesdetail\");","map":{"version":3,"names":["React","useEffect","Route","useParams","Link","useRouteMatch","Comments","useHttp","getSingleQuote","HighlightedQuote","LoadingSpinner","DUMMY_QUOTES","id","author","text","Quotesdetail","match","params","quoteId","sendRequest","status","data","loeadedQuote","error","quote","find","console","log","path"],"sources":["/home/ree/WORKSPACE/TECH/React/15-route_react_project/src/pages/QuotesDetail.js"],"sourcesContent":["import React, { useEffect } from \"react\";\n\nimport { Route, useParams, Link, useRouteMatch } from \"react-router-dom\";\nimport Comments from \"../components/comments/Comments\";\nimport useHttp from \"../hooks/use-http\";\nimport { getSingleQuote } from \"../lib/api\";\n\nimport HighlightedQuote from \"../components/quotes/HighlightedQuote\";\nimport LoadingSpinner from \"../components/UI/LoadingSpinner\";\n\nconst DUMMY_QUOTES = [\n  { id: \"q1\", author: \"Max\", text: \"Learning React is Fun!\" },\n  { id: \"q2\", author: \"Maximilian\", text: \"Learning React is Great!\" },\n];\n\nconst Quotesdetail = () => {\n  // useRouteMath\n  // 중첩라우팅을 쉽게사용하기위함\n  // url정보 뿐아니라 라우터 내부에서 관리되는 데이터를 보기위함\n  const match = useRouteMatch();\n\n  const params = useParams();\n\n  const { quoteId } = params;\n\n  const {\n    sendRequest,\n    status,\n    data: loeadedQuote,\n    error,\n  } = useHttp(getSingleQuote, true);\n\n  useEffect(() => {\n    sendRequest(quoteId);\n  }, [sendRequest, quoteId]);\n\n  if (status === \"pending\") {\n    return (\n      <div className=\"centered\">\n        <LoadingSpinner />\n      </div>\n    );\n  }\n\n  if (error) {\n    return <p className=\"centered\">{error}</p>;\n  }\n\n  const quote = DUMMY_QUOTES.find((quote) => quote.id === params.quoteId);\n  console.log(match);\n\n  if (!loeadedQuote) {\n    return <p>No quote Found!</p>;\n  }\n\n  return (\n    <div>\n      <HighlightedQuote text={quote.text} author={quote.author} />\n      {/* 중첩라우팅을이용한 코멘트 클릭후 버튼 숨기기 */}\n      <Route path={`${match.path}`} exact>\n        <div className=\"centered\">\n          <Link className=\"btn--flat\" to={`/quotes/${params.quoteId}/comments`}>\n            Load Comments\n          </Link>\n        </div>\n      </Route>\n      <Route path={`${match.path}/comments`}>\n        <Comments />\n      </Route>\n    </div>\n  );\n};\n\nexport default Quotesdetail;\n"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AAEA,SAASC,KAAT,EAAgBC,SAAhB,EAA2BC,IAA3B,EAAiCC,aAAjC,QAAsD,kBAAtD;AACA,OAAOC,QAAP,MAAqB,iCAArB;AACA,OAAOC,OAAP,MAAoB,mBAApB;AACA,SAASC,cAAT,QAA+B,YAA/B;AAEA,OAAOC,gBAAP,MAA6B,uCAA7B;AACA,OAAOC,cAAP,MAA2B,iCAA3B;;AAEA,MAAMC,YAAY,GAAG,CACnB;EAAEC,EAAE,EAAE,IAAN;EAAYC,MAAM,EAAE,KAApB;EAA2BC,IAAI,EAAE;AAAjC,CADmB,EAEnB;EAAEF,EAAE,EAAE,IAAN;EAAYC,MAAM,EAAE,YAApB;EAAkCC,IAAI,EAAE;AAAxC,CAFmB,CAArB;;AAKA,MAAMC,YAAY,GAAG,MAAM;EAAA;;EACzB;EACA;EACA;EACA,MAAMC,KAAK,GAAGX,aAAa,EAA3B;EAEA,MAAMY,MAAM,GAAGd,SAAS,EAAxB;EAEA,MAAM;IAAEe;EAAF,IAAcD,MAApB;EAEA,MAAM;IACJE,WADI;IAEJC,MAFI;IAGJC,IAAI,EAAEC,YAHF;IAIJC;EAJI,IAKFhB,OAAO,CAACC,cAAD,EAAiB,IAAjB,CALX;EAOAP,SAAS,CAAC,MAAM;IACdkB,WAAW,CAACD,OAAD,CAAX;EACD,CAFQ,EAEN,CAACC,WAAD,EAAcD,OAAd,CAFM,CAAT;;EAIA,IAAIE,MAAM,KAAK,SAAf,EAA0B;IACxB,oBACE;MAAK,SAAS,EAAC,UAAf;MAAA,uBACE,QAAC,cAAD;QAAA;QAAA;QAAA;MAAA;IADF;MAAA;MAAA;MAAA;IAAA,QADF;EAKD;;EAED,IAAIG,KAAJ,EAAW;IACT,oBAAO;MAAG,SAAS,EAAC,UAAb;MAAA,UAAyBA;IAAzB;MAAA;MAAA;MAAA;IAAA,QAAP;EACD;;EAED,MAAMC,KAAK,GAAGb,YAAY,CAACc,IAAb,CAAmBD,KAAD,IAAWA,KAAK,CAACZ,EAAN,KAAaK,MAAM,CAACC,OAAjD,CAAd;EACAQ,OAAO,CAACC,GAAR,CAAYX,KAAZ;;EAEA,IAAI,CAACM,YAAL,EAAmB;IACjB,oBAAO;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAAP;EACD;;EAED,oBACE;IAAA,wBACE,QAAC,gBAAD;MAAkB,IAAI,EAAEE,KAAK,CAACV,IAA9B;MAAoC,MAAM,EAAEU,KAAK,CAACX;IAAlD;MAAA;MAAA;MAAA;IAAA,QADF,eAGE,QAAC,KAAD;MAAO,IAAI,EAAG,GAAEG,KAAK,CAACY,IAAK,EAA3B;MAA8B,KAAK,MAAnC;MAAA,uBACE;QAAK,SAAS,EAAC,UAAf;QAAA,uBACE,QAAC,IAAD;UAAM,SAAS,EAAC,WAAhB;UAA4B,EAAE,EAAG,WAAUX,MAAM,CAACC,OAAQ,WAA1D;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MADF;QAAA;QAAA;QAAA;MAAA;IADF;MAAA;MAAA;MAAA;IAAA,QAHF,eAUE,QAAC,KAAD;MAAO,IAAI,EAAG,GAAEF,KAAK,CAACY,IAAK,WAA3B;MAAA,uBACE,QAAC,QAAD;QAAA;QAAA;QAAA;MAAA;IADF;MAAA;MAAA;MAAA;IAAA,QAVF;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AAgBD,CAxDD;;GAAMb,Y;UAIUV,a,EAECF,S,EASXI,O;;;KAfAQ,Y;AA0DN,eAAeA,YAAf"},"metadata":{},"sourceType":"module"}