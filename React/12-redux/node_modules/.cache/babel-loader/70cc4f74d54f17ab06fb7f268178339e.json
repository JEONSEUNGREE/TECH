{"ast":null,"code":"var _jsxFileName = \"/home/ree/WORKSPACE/TECH/React/12-redux/src/components/Counter.js\",\n    _s = $RefreshSig$();\n\n// react-redux팀에서 만든 커스텀 훅사용\n// connect는 클래스형기반에서 사용\nimport { useSelector, connect } from 'react-redux';\nimport classes from './Counter.module.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Counter = () => {\n  _s();\n\n  // 스토어에서 어떤 데이터를 추출할지 선택함\n  // 아래와같이 useSelector를 설정할경우 리액트리덕스가 자동으로 서브스크립션을 설정한다.\n  // 그렇기떄문에 리덕스 스토어가 바뀐다면 자동으로 컴포넌트 함수가 다시 실행될것이다.\n  // 만약 UNMOUNT시에는 자동으로 리액트 리덕스가 서브스크립션을 클리어한다.\n  const counter = useSelector(state => state.counter);\n\n  const toggleCounterHandler = () => {};\n\n  return /*#__PURE__*/_jsxDEV(\"main\", {\n    className: classes.counter,\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Redux Counter\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.value,\n      children: counter\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        children: \"Increment\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        children: \"decrement\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: toggleCounterHandler,\n      children: \"Toggle Counter\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Counter, \"Y7vguJnByGXeD5U4dCX/IxJPE/A=\", false, function () {\n  return [useSelector];\n});\n\n_c = Counter;\nexport default Counter;\n\nvar _c;\n\n$RefreshReg$(_c, \"Counter\");","map":{"version":3,"names":["useSelector","connect","classes","Counter","counter","state","toggleCounterHandler","value"],"sources":["/home/ree/WORKSPACE/TECH/React/12-redux/src/components/Counter.js"],"sourcesContent":["// react-redux팀에서 만든 커스텀 훅사용\n// connect는 클래스형기반에서 사용\nimport { useSelector, connect } from 'react-redux'\n\nimport classes from './Counter.module.css';\n\nconst Counter = () => {\n  // 스토어에서 어떤 데이터를 추출할지 선택함\n  // 아래와같이 useSelector를 설정할경우 리액트리덕스가 자동으로 서브스크립션을 설정한다.\n  // 그렇기떄문에 리덕스 스토어가 바뀐다면 자동으로 컴포넌트 함수가 다시 실행될것이다.\n  // 만약 UNMOUNT시에는 자동으로 리액트 리덕스가 서브스크립션을 클리어한다.\n  const counter = useSelector(state => state.counter);\n\n  const toggleCounterHandler = () => {};\n\n  return (\n    <main className={classes.counter}>\n      <h1>Redux Counter</h1>\n      <div className={classes.value}>{counter}</div>\n      <div>\n        <button>Increment</button>\n        <button>decrement</button>\n      </div>\n      <button onClick={toggleCounterHandler}>Toggle Counter</button>\n    </main>\n  );\n};\n\nexport default Counter;\n"],"mappings":";;;AAAA;AACA;AACA,SAASA,WAAT,EAAsBC,OAAtB,QAAqC,aAArC;AAEA,OAAOC,OAAP,MAAoB,sBAApB;;;AAEA,MAAMC,OAAO,GAAG,MAAM;EAAA;;EACpB;EACA;EACA;EACA;EACA,MAAMC,OAAO,GAAGJ,WAAW,CAACK,KAAK,IAAIA,KAAK,CAACD,OAAhB,CAA3B;;EAEA,MAAME,oBAAoB,GAAG,MAAM,CAAE,CAArC;;EAEA,oBACE;IAAM,SAAS,EAAEJ,OAAO,CAACE,OAAzB;IAAA,wBACE;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QADF,eAEE;MAAK,SAAS,EAAEF,OAAO,CAACK,KAAxB;MAAA,UAAgCH;IAAhC;MAAA;MAAA;MAAA;IAAA,QAFF,eAGE;MAAA,wBACE;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QADF,eAEE;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAFF;IAAA;MAAA;MAAA;MAAA;IAAA,QAHF,eAOE;MAAQ,OAAO,EAAEE,oBAAjB;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAPF;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AAWD,CApBD;;GAAMH,O;UAKYH,W;;;KALZG,O;AAsBN,eAAeA,OAAf"},"metadata":{},"sourceType":"module"}