{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nconst initialCounterState = {\n  counter: 0,\n  showCounter: true,\n  isAuthenticated: false\n}; // redux가 커짐에따라 쪼개기위해 redux Toolkit 라이브러리를 사용한다.\n// 툴킷사용시 이미 툴킷에 redux가 포함되어있기에 기존 라이브러리를 삭제해야한다.\n\nconst counterSlice = createSlice({\n  name: 'counter',\n  initialState: initialCounterState,\n  // 위 state는 reducer함수가 필요하다\n  // 아래 함수들은 나중에 리덕스에 의해 호출됨\n  reducers: {\n    // 호출한곳에만 사용됨으로 if문이 따로 필요없음\n    // 고유 액션 식별자가 자동으로 설정되었기때문\n    increment(state) {\n      // 아래와같이두면 immer라는 다른패키지를 사용해 기존 코드를 자동복사해서 새로운 객체를 생성함 (변경불가하게하고 새로운 객체를 생성함)\n      state.counter++;\n    },\n\n    decrement(state) {\n      state.counter--;\n    },\n\n    increase(state, action) {\n      // action을 listen하는 리듀서 payload, data를 가지고있음\n      state.counter = state.counter + action.payload;\n    },\n\n    toggleCounter(state) {\n      state.showCounter = !state.showCounter;\n    }\n\n  }\n});\nexport default counterSlice.reducer;","map":{"version":3,"names":["createSlice","initialCounterState","counter","showCounter","isAuthenticated","counterSlice","name","initialState","reducers","increment","state","decrement","increase","action","payload","toggleCounter","reducer"],"sources":["/home/ree/WORKSPACE/TECH/React/12-redux/src/store/counter.js"],"sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\n\nconst initialCounterState = { counter: 0, showCounter: true , isAuthenticated: false };\n\n// redux가 커짐에따라 쪼개기위해 redux Toolkit 라이브러리를 사용한다.\n// 툴킷사용시 이미 툴킷에 redux가 포함되어있기에 기존 라이브러리를 삭제해야한다.\nconst counterSlice = createSlice( {\n    name: 'counter',\n    initialState: initialCounterState,\n    // 위 state는 reducer함수가 필요하다\n    // 아래 함수들은 나중에 리덕스에 의해 호출됨\n    reducers: {\n        // 호출한곳에만 사용됨으로 if문이 따로 필요없음\n        // 고유 액션 식별자가 자동으로 설정되었기때문\n        increment(state) {\n            // 아래와같이두면 immer라는 다른패키지를 사용해 기존 코드를 자동복사해서 새로운 객체를 생성함 (변경불가하게하고 새로운 객체를 생성함)\n            state.counter++\n        },\n        decrement(state) {\n            state.counter--;\n        },\n        increase(state, action) {\n            // action을 listen하는 리듀서 payload, data를 가지고있음\n            state.counter = state.counter + action.payload;\n        },\n        toggleCounter(state) {\n            state.showCounter = !state.showCounter;\n        }\n    }\n});\n\n\nexport default counterSlice.reducer;"],"mappings":"AAAA,SAASA,WAAT,QAA4B,kBAA5B;AAEA,MAAMC,mBAAmB,GAAG;EAAEC,OAAO,EAAE,CAAX;EAAcC,WAAW,EAAE,IAA3B;EAAkCC,eAAe,EAAE;AAAnD,CAA5B,C,CAEA;AACA;;AACA,MAAMC,YAAY,GAAGL,WAAW,CAAE;EAC9BM,IAAI,EAAE,SADwB;EAE9BC,YAAY,EAAEN,mBAFgB;EAG9B;EACA;EACAO,QAAQ,EAAE;IACN;IACA;IACAC,SAAS,CAACC,KAAD,EAAQ;MACb;MACAA,KAAK,CAACR,OAAN;IACH,CANK;;IAONS,SAAS,CAACD,KAAD,EAAQ;MACbA,KAAK,CAACR,OAAN;IACH,CATK;;IAUNU,QAAQ,CAACF,KAAD,EAAQG,MAAR,EAAgB;MACpB;MACAH,KAAK,CAACR,OAAN,GAAgBQ,KAAK,CAACR,OAAN,GAAgBW,MAAM,CAACC,OAAvC;IACH,CAbK;;IAcNC,aAAa,CAACL,KAAD,EAAQ;MACjBA,KAAK,CAACP,WAAN,GAAoB,CAACO,KAAK,CAACP,WAA3B;IACH;;EAhBK;AALoB,CAAF,CAAhC;AA0BA,eAAeE,YAAY,CAACW,OAA5B"},"metadata":{},"sourceType":"module"}