{"ast":null,"code":"var _jsxFileName = \"/home/ree/WORKSPACE/TECH/React/12-redux/src/components/Counter.js\";\nimport { Component } from \"react\"; // react-redux팀에서 만든 커스텀 훅사용\n// connect는 클래스형기반에서 사용\n\nimport { useSelector, connect, useDispatch } from \"react-redux\";\nimport classes from \"./Counter.module.css\"; // const Counter = () => {\n//   // 스토어에서 어떤 데이터를 추출할지 선택함\n//   // 아래와같이 useSelector를 설정할경우 리액트리덕스가 자동으로 서브스크립션을 설정한다.\n//   // 그렇기떄문에 리덕스 스토어가 바뀐다면 자동으로 컴포넌트 함수가 다시 실행될것이다.\n//   // 만약 UNMOUNT시에는 자동으로 리액트 리덕스가 서브스크립션을 클리어한다.\n//   const counter = useSelector((state) => state.counter);\n//   const dispatch = useDispatch();\n//   const incrementHandler = () => {\n//     dispatch({ type: \"increment\" });\n//   };\n//   const decrementHandler = () => {\n//     dispatch({ type: \"decrement\" });\n//   };\n//   const toggleCounterHandler = () => {};\n//   return (\n//     <main className={classes.counter}>\n//       <h1>Redux Counter</h1>\n//       <div className={classes.value}>{counter}</div>\n//       <div>\n//         <button onClick={incrementHandler}>Increment</button>\n//         <button onClick={decrementHandler}>Decrement</button>\n//       </div>\n//       <button onClick={toggleCounterHandler}>Toggle Counter</button>\n//     </main>\n//   );\n// };\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Counter extends Component {\n  incrementHandler() {\n    this.props.increment();\n  }\n\n  decrementHandler() {\n    this.props.decrement();\n  }\n\n  toggleCounterHandler() {}\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"main\", {\n      className: classes.counter,\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Redux Counter\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.value,\n        children: this.props.counter\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: this.incrementHandler.bind(this),\n          children: \"Increment\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: this.decrementHandler.bind(this),\n          children: \"Decrement\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: this.toggleCounterHandler,\n        children: \"Toggle Counter\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this);\n  }\n\n} // export default Counter;\n\n\nconst mapStateToProps = state => {\n  return {\n    counter: state.counter\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    increment: () => dispatch({\n      type: \"increment\"\n    }),\n    decrement: () => dispatch({\n      type: \"decrement\"\n    })\n  };\n}; //  connect시 리액트 리덕스가 서브스크립션을 설정함\n\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Counter);","map":{"version":3,"names":["Component","useSelector","connect","useDispatch","classes","Counter","incrementHandler","props","increment","decrementHandler","decrement","toggleCounterHandler","render","counter","value","bind","mapStateToProps","state","mapDispatchToProps","dispatch","type"],"sources":["/home/ree/WORKSPACE/TECH/React/12-redux/src/components/Counter.js"],"sourcesContent":["import { Component } from \"react\";\n\n// react-redux팀에서 만든 커스텀 훅사용\n// connect는 클래스형기반에서 사용\nimport { useSelector, connect, useDispatch } from \"react-redux\";\n\nimport classes from \"./Counter.module.css\";\n\n// const Counter = () => {\n//   // 스토어에서 어떤 데이터를 추출할지 선택함\n//   // 아래와같이 useSelector를 설정할경우 리액트리덕스가 자동으로 서브스크립션을 설정한다.\n//   // 그렇기떄문에 리덕스 스토어가 바뀐다면 자동으로 컴포넌트 함수가 다시 실행될것이다.\n//   // 만약 UNMOUNT시에는 자동으로 리액트 리덕스가 서브스크립션을 클리어한다.\n//   const counter = useSelector((state) => state.counter);\n\n//   const dispatch = useDispatch();\n\n//   const incrementHandler = () => {\n//     dispatch({ type: \"increment\" });\n//   };\n//   const decrementHandler = () => {\n//     dispatch({ type: \"decrement\" });\n//   };\n\n//   const toggleCounterHandler = () => {};\n\n//   return (\n//     <main className={classes.counter}>\n//       <h1>Redux Counter</h1>\n//       <div className={classes.value}>{counter}</div>\n//       <div>\n//         <button onClick={incrementHandler}>Increment</button>\n//         <button onClick={decrementHandler}>Decrement</button>\n//       </div>\n//       <button onClick={toggleCounterHandler}>Toggle Counter</button>\n//     </main>\n//   );\n// };\n\nclass Counter extends Component {\n  incrementHandler() {\n    this.props.increment();\n  }\n\n  decrementHandler() {\n    this.props.decrement();\n  }\n\n  toggleCounterHandler() {\n  }\n\n  render() {\n    return (\n      <main className={classes.counter}>\n      <h1>Redux Counter</h1>\n      <div className={classes.value}>{this.props.counter}</div>\n      <div>\n        <button onClick={this.incrementHandler.bind(this)}>Increment</button>\n        <button onClick={this.decrementHandler.bind(this)}>Decrement</button>\n      </div>\n      <button onClick={this.toggleCounterHandler}>Toggle Counter</button>\n    </main>\n    )\n\n  }\n}\n\n// export default Counter;\n\nconst mapStateToProps = (state) => {\n  return {\n    counter: state.counter,\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    increment: () => dispatch({ type: \"increment\" }),\n    decrement: () => dispatch({ type: \"decrement\" }),\n  };\n};\n//  connect시 리액트 리덕스가 서브스크립션을 설정함\nexport default connect(mapStateToProps, mapDispatchToProps)(Counter);\n"],"mappings":";AAAA,SAASA,SAAT,QAA0B,OAA1B,C,CAEA;AACA;;AACA,SAASC,WAAT,EAAsBC,OAAtB,EAA+BC,WAA/B,QAAkD,aAAlD;AAEA,OAAOC,OAAP,MAAoB,sBAApB,C,CAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;AAEA,MAAMC,OAAN,SAAsBL,SAAtB,CAAgC;EAC9BM,gBAAgB,GAAG;IACjB,KAAKC,KAAL,CAAWC,SAAX;EACD;;EAEDC,gBAAgB,GAAG;IACjB,KAAKF,KAAL,CAAWG,SAAX;EACD;;EAEDC,oBAAoB,GAAG,CACtB;;EAEDC,MAAM,GAAG;IACP,oBACE;MAAM,SAAS,EAAER,OAAO,CAACS,OAAzB;MAAA,wBACA;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QADA,eAEA;QAAK,SAAS,EAAET,OAAO,CAACU,KAAxB;QAAA,UAAgC,KAAKP,KAAL,CAAWM;MAA3C;QAAA;QAAA;QAAA;MAAA,QAFA,eAGA;QAAA,wBACE;UAAQ,OAAO,EAAE,KAAKP,gBAAL,CAAsBS,IAAtB,CAA2B,IAA3B,CAAjB;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QADF,eAEE;UAAQ,OAAO,EAAE,KAAKN,gBAAL,CAAsBM,IAAtB,CAA2B,IAA3B,CAAjB;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QAFF;MAAA;QAAA;QAAA;QAAA;MAAA,QAHA,eAOA;QAAQ,OAAO,EAAE,KAAKJ,oBAAtB;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAPA;IAAA;MAAA;MAAA;MAAA;IAAA,QADF;EAYD;;AAzB6B,C,CA4BhC;;;AAEA,MAAMK,eAAe,GAAIC,KAAD,IAAW;EACjC,OAAO;IACLJ,OAAO,EAAEI,KAAK,CAACJ;EADV,CAAP;AAGD,CAJD;;AAMA,MAAMK,kBAAkB,GAAIC,QAAD,IAAc;EACvC,OAAO;IACLX,SAAS,EAAE,MAAMW,QAAQ,CAAC;MAAEC,IAAI,EAAE;IAAR,CAAD,CADpB;IAELV,SAAS,EAAE,MAAMS,QAAQ,CAAC;MAAEC,IAAI,EAAE;IAAR,CAAD;EAFpB,CAAP;AAID,CALD,C,CAMA;;;AACA,eAAelB,OAAO,CAACc,eAAD,EAAkBE,kBAAlB,CAAP,CAA6Cb,OAA7C,CAAf"},"metadata":{},"sourceType":"module"}