리액트는 자바스크립트 라이브러리이다.
사용자는 리액트의 컴포넌트를 ㅌㅇ해 화면을 구성해 나가는데 리액트는 웹을 모른다.(브라우저와 관계가 없다.)
화면에 표시해주는 리액트 DOM은 브라우저의 일부인 실제 DOM에 대한 작업을 하므로 따라서 사용자가 보고 있는 화면에 무언가를 표시해주는 역할은 리액트 DOM의 역할이다.
컴포넌트의 프롭스로 부모자식간의 데이터 전달 state를 통한 상태를 다룬다. 컨텍스트로 큰 데이터를 다룬다.

어떻게 리액트가 동작하는가?
리액트는 컴포넌트를 다룬다. -> 최종적으로 리액트의 역할은 가상 DOM이라는 개념을 사용하는것이라고 볼수있다.
이 가상DOM은 앱이 마지막에 만들어내는 컴포넌트 트리를 결정한다. 각각 하위 트리를 갖고 있는 컴포넌트들은 JSX코드를 반환하는데
이 가상 DOM은 컴포넌트 트리의 현재 모양과 최종 모양을 정한다. 
예를 들어 상태정보가 업데이트 되면 이 정보는 리액트 DOM으로 전달되어 갱신 전후의 상태 차이를 인식하고 리액트가 컴포넌트 트리르 통해 구성한 가상 스냅샷인
가상 DOM과 일치하도록 실제 DOM을 조작하는 방법을 알 수 있게한다. (props,state,context에서 발생한 변경사항이 리액트에서 재평가하여 반영된다. -> 리액트 돔이 반영)
단 컴포넌트 함수가 재 실행된다하여 실제 DOM이 재평가된다는 의미가 아니다.
컴포넌트 부분과 리액트 부분, 그리고 실제 DOM을 구분할 줄 알아야한다.
1. 컴포넌트는 (상태, props, context)가 변경될 때 재평가 됩니다. -> 리액트는 컴포넌트 함수를 다시 실행함.
2. 실제DOM은 리액트가 구성한 컴포넌트의 이전상태와 트리, 그리고 현재의 상태간의 차이점을 기반으로 변경이 필요할때만 업데이트 한다. (필요한경우만 변경한다는 의미이다.)
(여기서의 사실은 VDOM을 사용하여 실제 돔과 비교함으로써 필요한 부분만 변경한다면 메모리상에서 접근하여 반영하기에 빠르게 변경이된다.
실제 돔을 사용하면 성능 측면에서 자원이 많이 필요하기 때문이다.)

1. 문자변경
2. 리액트 DOM에서 두가지 스냅샷 비교
3. 리액트 DOM에서 실제 DOM을 업데이트 (재평가 부분만 변경)

