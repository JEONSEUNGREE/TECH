{"ast":null,"code":"var _jsxFileName = \"/home/ree/WORKSPACE/TECH/React/03-starting-project/src/components/store/Auth-Context.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/React.createContext({\n  isLoggedIn: false,\n  onLogout: () => {},\n  onLogin: (email, password) => {}\n});\nexport const AuthContextProvider = props => {\n  _s();\n\n  const [isLoggedIn, setIsLoggedIn] = useState(false); // 한번 실행되며 변경확인시 실행됨\n\n  useEffect(() => {\n    const storedUserLoggedInInformation = localStorage.getItem(\"isLoggedIn\");\n\n    if (storedUserLoggedInInformation === \"1\") {\n      setIsLoggedIn(true);\n    }\n  }, []);\n\n  const logoutHandler = () => {\n    localStorage.removeItem(\"isLoggedIn\");\n    setIsLoggedIn(false);\n  };\n\n  const loginHandler = () => {\n    localStorage.setItem(\"isLoggedIn\", \"1\");\n    setIsLoggedIn(true);\n  };\n\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: {\n      isLoggedIn: isLoggedIn,\n      onLogin: loginHandler,\n      onLogout: logoutHandler\n    },\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this);\n};\n\n_s(AuthContextProvider, \"fKLMlyFH2GMrhNeUDpp+0z1yiCo=\");\n\n_c = AuthContextProvider;\nexport default AuthContext; // 리액트 규칙\n// 리액트 컨텍스트는 자주 바뀌는 화면에서 사용하지않는게 좋다. (최적화되어있지않음)\n// 값이 자주 바뀌는 화면의 경우 state를 사용한다.\n// 리액트 훅은 (use로 시작하는 모든함수 useEffect,useState,useContext....), 혹은 커스터훅은 리액트 함수 내에서만 호출해야한다.\n// nested 불가, 리액트 훅은 콜백함수나 블록문에서 사용 불가(최상위 컴포넌트 함수에서 호출 가능)\n\nvar _c;\n\n$RefreshReg$(_c, \"AuthContextProvider\");","map":{"version":3,"names":["React","useState","useEffect","AuthContext","createContext","isLoggedIn","onLogout","onLogin","email","password","AuthContextProvider","props","setIsLoggedIn","storedUserLoggedInInformation","localStorage","getItem","logoutHandler","removeItem","loginHandler","setItem","children"],"sources":["/home/ree/WORKSPACE/TECH/React/03-starting-project/src/components/store/Auth-Context.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\n\nconst AuthContext = React.createContext({\n  isLoggedIn: false,\n  onLogout: () => {},\n  onLogin: (email, password) => {},\n});\n\nexport const AuthContextProvider = (props) => {\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n\n  // 한번 실행되며 변경확인시 실행됨\n  useEffect(() => {\n    const storedUserLoggedInInformation = localStorage.getItem(\"isLoggedIn\");\n\n    if (storedUserLoggedInInformation === \"1\") {\n      setIsLoggedIn(true);\n    }\n  }, []);\n\n  const logoutHandler = () => {\n    localStorage.removeItem(\"isLoggedIn\");\n    setIsLoggedIn(false);\n  };\n\n  const loginHandler = () => {\n    localStorage.setItem(\"isLoggedIn\", \"1\");\n    setIsLoggedIn(true);\n  };\n\n  return (\n    <AuthContext.Provider\n      value={{\n        isLoggedIn: isLoggedIn,\n        onLogin: loginHandler,\n        onLogout: logoutHandler,\n      }}\n    >\n      {props.children}\n    </AuthContext.Provider>\n  );\n};\n\nexport default AuthContext;\n\n// 리액트 규칙\n// 리액트 컨텍스트는 자주 바뀌는 화면에서 사용하지않는게 좋다. (최적화되어있지않음)\n// 값이 자주 바뀌는 화면의 경우 state를 사용한다.\n\n// 리액트 훅은 (use로 시작하는 모든함수 useEffect,useState,useContext....), 혹은 커스터훅은 리액트 함수 내에서만 호출해야한다.\n// nested 불가, 리액트 훅은 콜백함수나 블록문에서 사용 불가(최상위 컴포넌트 함수에서 호출 가능)"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;;AAEA,MAAMC,WAAW,gBAAGH,KAAK,CAACI,aAAN,CAAoB;EACtCC,UAAU,EAAE,KAD0B;EAEtCC,QAAQ,EAAE,MAAM,CAAE,CAFoB;EAGtCC,OAAO,EAAE,CAACC,KAAD,EAAQC,QAAR,KAAqB,CAAE;AAHM,CAApB,CAApB;AAMA,OAAO,MAAMC,mBAAmB,GAAIC,KAAD,IAAW;EAAA;;EAC5C,MAAM,CAACN,UAAD,EAAaO,aAAb,IAA8BX,QAAQ,CAAC,KAAD,CAA5C,CAD4C,CAG5C;;EACAC,SAAS,CAAC,MAAM;IACd,MAAMW,6BAA6B,GAAGC,YAAY,CAACC,OAAb,CAAqB,YAArB,CAAtC;;IAEA,IAAIF,6BAA6B,KAAK,GAAtC,EAA2C;MACzCD,aAAa,CAAC,IAAD,CAAb;IACD;EACF,CANQ,EAMN,EANM,CAAT;;EAQA,MAAMI,aAAa,GAAG,MAAM;IAC1BF,YAAY,CAACG,UAAb,CAAwB,YAAxB;IACAL,aAAa,CAAC,KAAD,CAAb;EACD,CAHD;;EAKA,MAAMM,YAAY,GAAG,MAAM;IACzBJ,YAAY,CAACK,OAAb,CAAqB,YAArB,EAAmC,GAAnC;IACAP,aAAa,CAAC,IAAD,CAAb;EACD,CAHD;;EAKA,oBACE,QAAC,WAAD,CAAa,QAAb;IACE,KAAK,EAAE;MACLP,UAAU,EAAEA,UADP;MAELE,OAAO,EAAEW,YAFJ;MAGLZ,QAAQ,EAAEU;IAHL,CADT;IAAA,UAOGL,KAAK,CAACS;EAPT;IAAA;IAAA;IAAA;EAAA,QADF;AAWD,CAjCM;;GAAMV,mB;;KAAAA,mB;AAmCb,eAAeP,WAAf,C,CAEA;AACA;AACA;AAEA;AACA"},"metadata":{},"sourceType":"module"}