{"ast":null,"code":"var _jsxFileName = \"/home/ree/WORKSPACE/TECH/React/03-starting-project/src/components/Login/Login.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport Card from \"../UI/Card/Card\";\nimport classes from \"./Login.module.css\";\nimport Button from \"../UI/Button/Button\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Login = props => {\n  _s();\n\n  const [enteredEmail, setEnteredEmail] = useState(\"\");\n  const [emailIsValid, setEmailIsValid] = useState();\n  const [enteredPassword, setEnteredPassword] = useState(\"\");\n  const [passwordIsValid, setPasswordIsValid] = useState();\n  const [formIsValid, setFormIsValid] = useState(false);\n  useEffect(() => {\n    console.log(\"Checking form validity\"); // 타이머를 설정하면 타이머가 여러개 설정되었을시 마지막 타이머만 작동한다.\n\n    const identifier = setTimeout(() => {\n      setFormIsValid(enteredEmail.includes(\"@\") && enteredPassword.trim().length > 6);\n    }, 500); // 클린업 함수 클린업 프로세스로 실행함\n    // 클린업 함수는 첫번째 컴포넌트 실행시 실행을 제외하고 이후에 실행시에 발생하는\n    // useEffect 실행 이전에 실행된다.\n    // DOM에 마운트가 해제될 때마다 실행된다.\n    // 정리하자면 모든 새로운 사이드 이펙트함수가 실행되기전 (처음실행 되기전에는 실행되지 않음)\n    // 컴포넌트가 제거되기 전에 실행된다.\n\n    return () => {\n      console.log(\"CLEAN UP\");\n      clearTimeout(identifier);\n    }; // 앱 초기 한번만 실행되거나 컴포넌트 변화 감지에서 작동함으로\n    // 의존성부분을 추가하여 변화에 동작할수있게 작성하면된다.\n    // useEffect는 주로 사이드이펙트에 부분에서 사용하며 http 리퀘스트, 키입력 데이터 저장등에 사용된다.\n    // 단 어떤 하나하나의 동작마다 useEffect가 작동한다면 불필요한 작업이되기에\n    // 필요한부분에서 작동하도록 하는 조치가 필요하다.\n    // http요청에대해서는 더더욱 트래픽이 증가하기에 알맞는 트리거를 설정할필요가있다.\n    // setFormIsValid(\n    //   enteredEmail.includes(\"@\") && enteredPassword.trim().length > 6\n    // );\n  }, [setFormIsValid, enteredEmail, enteredPassword]);\n\n  const emailChangeHandler = event => {\n    setEnteredEmail(event.target.value); // setFormIsValid(\n    //   event.target.value.includes(\"@\") && enteredPassword.trim().length > 6\n    // );\n  };\n\n  const passwordChangeHandler = event => {\n    setEnteredPassword(event.target.value); // setFormIsValid(\n    //   event.target.value.trim().length > 6 && enteredEmail.includes(\"@\")\n    // );\n  };\n\n  const validateEmailHandler = () => {\n    setEmailIsValid(enteredEmail.includes(\"@\"));\n  };\n\n  const validatePasswordHandler = () => {\n    setPasswordIsValid(enteredPassword.trim().length > 6);\n  };\n\n  const submitHandler = event => {\n    event.preventDefault();\n    props.onLogin(enteredEmail, enteredPassword);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Card, {\n    className: classes.login,\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: submitHandler,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: `${classes.control} ${emailIsValid === false ? classes.invalid : \"\"}`,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"email\",\n          children: \"E-Mail\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"email\",\n          id: \"email\",\n          value: enteredEmail,\n          onChange: emailChangeHandler,\n          onBlur: validateEmailHandler\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `${classes.control} ${passwordIsValid === false ? classes.invalid : \"\"}`,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"password\",\n          children: \"Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          id: \"password\",\n          value: enteredPassword,\n          onChange: passwordChangeHandler,\n          onBlur: validatePasswordHandler\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.actions,\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          type: \"submit\",\n          className: classes.btn,\n          disabled: !formIsValid,\n          children: \"Login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 75,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Login, \"l/fuvcyF4dMMNxwxfSljjl2ogIY=\");\n\n_c = Login;\nexport default Login;\n\nvar _c;\n\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["React","useState","useEffect","Card","classes","Button","Login","props","enteredEmail","setEnteredEmail","emailIsValid","setEmailIsValid","enteredPassword","setEnteredPassword","passwordIsValid","setPasswordIsValid","formIsValid","setFormIsValid","console","log","identifier","setTimeout","includes","trim","length","clearTimeout","emailChangeHandler","event","target","value","passwordChangeHandler","validateEmailHandler","validatePasswordHandler","submitHandler","preventDefault","onLogin","login","control","invalid","actions","btn"],"sources":["/home/ree/WORKSPACE/TECH/React/03-starting-project/src/components/Login/Login.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\n\nimport Card from \"../UI/Card/Card\";\nimport classes from \"./Login.module.css\";\nimport Button from \"../UI/Button/Button\";\n\nconst Login = (props) => {\n  const [enteredEmail, setEnteredEmail] = useState(\"\");\n  const [emailIsValid, setEmailIsValid] = useState();\n  const [enteredPassword, setEnteredPassword] = useState(\"\");\n  const [passwordIsValid, setPasswordIsValid] = useState();\n  const [formIsValid, setFormIsValid] = useState(false);\n\n  useEffect(() => {\n    console.log(\"Checking form validity\")\n\n    // 타이머를 설정하면 타이머가 여러개 설정되었을시 마지막 타이머만 작동한다.\n    const identifier = setTimeout(() => {\n      setFormIsValid(\n        enteredEmail.includes(\"@\") && enteredPassword.trim().length > 6\n      );\n    }, 500);\n\n    // 클린업 함수 클린업 프로세스로 실행함\n    // 클린업 함수는 첫번째 컴포넌트 실행시 실행을 제외하고 이후에 실행시에 발생하는\n    // useEffect 실행 이전에 실행된다.\n    // DOM에 마운트가 해제될 때마다 실행된다.\n    // 정리하자면 모든 새로운 사이드 이펙트함수가 실행되기전 (처음실행 되기전에는 실행되지 않음)\n    // 컴포넌트가 제거되기 전에 실행된다.\n    return () => {\n      console.log(\"CLEAN UP\")\n      clearTimeout(identifier)\n    };\n    // 앱 초기 한번만 실행되거나 컴포넌트 변화 감지에서 작동함으로\n    // 의존성부분을 추가하여 변화에 동작할수있게 작성하면된다.\n    // useEffect는 주로 사이드이펙트에 부분에서 사용하며 http 리퀘스트, 키입력 데이터 저장등에 사용된다.\n    // 단 어떤 하나하나의 동작마다 useEffect가 작동한다면 불필요한 작업이되기에\n    // 필요한부분에서 작동하도록 하는 조치가 필요하다.\n    // http요청에대해서는 더더욱 트래픽이 증가하기에 알맞는 트리거를 설정할필요가있다.\n    // setFormIsValid(\n    //   enteredEmail.includes(\"@\") && enteredPassword.trim().length > 6\n    // );\n  }, [setFormIsValid, enteredEmail, enteredPassword]);\n  \n  const emailChangeHandler = (event) => {\n    setEnteredEmail(event.target.value);\n\n    // setFormIsValid(\n    //   event.target.value.includes(\"@\") && enteredPassword.trim().length > 6\n    // );\n  };\n\n  const passwordChangeHandler = (event) => {\n    setEnteredPassword(event.target.value);\n\n    // setFormIsValid(\n    //   event.target.value.trim().length > 6 && enteredEmail.includes(\"@\")\n    // );\n  };\n\n  const validateEmailHandler = () => {\n    setEmailIsValid(enteredEmail.includes(\"@\"));\n  };\n\n  const validatePasswordHandler = () => {\n    setPasswordIsValid(enteredPassword.trim().length > 6);\n  };\n\n  const submitHandler = (event) => {\n    event.preventDefault();\n    props.onLogin(enteredEmail, enteredPassword);\n  };\n\n  return (\n    <Card className={classes.login}>\n      <form onSubmit={submitHandler}>\n        <div\n          className={`${classes.control} ${\n            emailIsValid === false ? classes.invalid : \"\"\n          }`}\n        >\n          <label htmlFor=\"email\">E-Mail</label>\n          <input\n            type=\"email\"\n            id=\"email\"\n            value={enteredEmail}\n            onChange={emailChangeHandler}\n            onBlur={validateEmailHandler}\n          />\n        </div>\n        <div\n          className={`${classes.control} ${\n            passwordIsValid === false ? classes.invalid : \"\"\n          }`}\n        >\n          <label htmlFor=\"password\">Password</label>\n          <input\n            type=\"password\"\n            id=\"password\"\n            value={enteredPassword}\n            onChange={passwordChangeHandler}\n            onBlur={validatePasswordHandler}\n          />\n        </div>\n        <div className={classes.actions}>\n          <Button type=\"submit\" className={classes.btn} disabled={!formIsValid}>\n            Login\n          </Button>\n        </div>\n      </form>\n    </Card>\n  );\n};\n\nexport default Login;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}