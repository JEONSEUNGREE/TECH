{"ast":null,"code":"var _jsxFileName = \"/home/ree/WORKSPACE/TECH/React/03-starting-project/src/components/Login/Login.js\",\n    _s = $RefreshSig$();\n\n// useState와 useReducer 사용시기\n// useState는 주요 사용 state이다.\nimport React, { useState, useEffect, useReducer } from \"react\";\nimport Card from \"../UI/Card/Card\";\nimport classes from \"./Login.module.css\";\nimport Button from \"../UI/Button/Button\"; // reducer 함수는 외부에 선언한다 이유는 함수 내부에서 어떤 데이터도 필요로하지않기때문\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst emailReducer = (state, action) => {\n  if (action.type === \"USER_INPUT\") {\n    return {\n      value: action.val,\n      isValid: action.val.includes(\"@\")\n    };\n  }\n\n  if (action.type === \"INPUT_BLUR\") {\n    return {\n      value: state.value,\n      isValid: state.value.includes(\"@\")\n    };\n  }\n\n  return {\n    value: \"\",\n    isValid: false\n  };\n};\n\nconst passwordReducer = (state, action) => {\n  if (action.type === \"USER_INPUT\") {\n    return {\n      value: action.val,\n      isValid: state.value.trim().length > 6\n    };\n  }\n\n  if (action.type === \"INPUT_BLUR\") {\n    return {\n      value: state.value,\n      isValid: state.value.trim().length > 6\n    };\n  }\n\n  return {\n    value: \"\",\n    isValid: false\n  };\n};\n\nconst Login = props => {\n  _s();\n\n  // const [enteredEmail, setEnteredEmail] = useState(\"\");\n  // const [emailIsValid, setEmailIsValid] = useState();\n  // const [enteredPassword, setEnteredPassword] = useState(\"\");\n  // const [passwordIsValid, setPasswordIsValid] = useState();\n  const [formIsValid, setFormIsValid] = useState(false);\n  const [emailState, dispatchEmail] = useReducer(emailReducer, {\n    value: \"\",\n    isValid: null\n  });\n  const [passwordState, dispatchPassword] = useReducer(passwordReducer, {\n    value: \"\",\n    isValid: null\n  }); // useEffect(() => {\n  //   console.log(\"EFFECT RUNNING\");\n  //   return () => {\n  //     console.log(\"first CleanUp\");\n  //   };\n  // }, [enteredEmail]);\n\n  const {\n    isValid: emailIsValid\n  } = emailState;\n  const {\n    isValid: passwordIsValid\n  } = passwordState;\n  useEffect(() => {\n    console.log(\"Checking form validity\"); // 타이머를 설정하면 타이머가 여러개 설정되었을시 마지막 타이머만 작동한다.\n\n    const identifier = setTimeout(() => {\n      console.log(\"TEST\");\n      setFormIsValid(emailIsValid && passwordIsValid);\n    }, 500);\n    console.log(emailIsValid); // 클린업 함수 클린업 프로세스로 실행함\n    // 클린업 함수는 첫번째 컴포넌트 실행시 실행을 제외하고 이후에 실행시에 발생하는\n    // useEffect 실행 이전에 실행된다.\n    // DOM에 마운트가 해제될 때마다 실행된다.\n    // 정리하자면 모든 새로운 사이드 이펙트함수가 실행되기전 (처음실행 되기전에는 실행되지 않음)\n    // 컴포넌트가 제거되기 전에 실행된다.\n\n    return () => {\n      console.log(\"CLEAN UP\");\n      clearTimeout(identifier);\n    }; // 앱 초기 한번만 실행되거나 컴포넌트 변화 감지에서 작동함으로\n    // 의존성부분을 추가하여 변화에 동작할수있게 작성하면된다.\n    // useEffect는 주로 사이드이펙트에 부분에서 사용하며 http 리퀘스트, 키입력 데이터 저장등에 사용된다.\n    // 단 어떤 하나하나의 동작마다 useEffect가 작동한다면 불필요한 작업이되기에\n    // 필요한부분에서 작동하도록 하는 조치가 필요하다.\n    // http요청에대해서는 더더욱 트래픽이 증가하기에 알맞는 트리거를 설정할필요가있다.\n    // setFormIsValid(\n    //   enteredEmail.includes(\"@\") && enteredPassword.trim().length > 6\n    // );\n  }, [emailIsValid, passwordIsValid]); // useEffect사용시 destructuring 사용 한경우가 위에 예시다.\n  // (중첩속성을 종속성을 추가함 []형태로)\n\n  const emailChangeHandler = event => {\n    dispatchEmail({\n      type: \"USER_INPUT\",\n      val: event.target.value\n    }); // 아래부분에서 발생할 수 있는문제는 다음과같다.\n    // 일전에 봤듯이 기존 스냅샷에 () => 와 같이 최산 스냅샷을 가져와서\n    // 업데이트를 해야하는데 아래 코드는 업데이트 state가 이전 state에 의존할수없는\n    // 두개의 스냅샷이 존재하기에 불가능한것이다.\n    // 리액트의 state 업데이트를 스케쥴링하는 방식에 주의하자.\n    // 비밀번호가 최신의 비밀번호로 업데이트 된 state가 아닐수있다는 의미이다.\n    // setFormIsValid(emailState.isValid && passwordState.isValid);\n  };\n\n  const passwordChangeHandler = event => {\n    dispatchPassword({\n      type: 'USER_INPUT',\n      val: event.target.value\n    }); // setFormIsValid(emailState.isValid && event.target.value.trim().length > 6);\n  };\n\n  const validateEmailHandler = () => {\n    // setEmailIsValid(emailState.isValid);\n    dispatchEmail({\n      type: \"INPUT_BLUR\"\n    });\n  };\n\n  const validatePasswordHandler = () => {\n    dispatchPassword({\n      type: \"INPUT_BLUR\"\n    }); // setPasswordIsValid(enteredPassword.trim().length > 6);\n  };\n\n  const submitHandler = event => {\n    event.preventDefault();\n    props.onLogin(emailState.value, passwordState.value);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Card, {\n    className: classes.login,\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: submitHandler,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: `${classes.control} ${emailState.isValid === false ? classes.invalid : \"\"}`,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"email\",\n          children: \"E-Mail\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 153,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"email\",\n          id: \"email\",\n          value: emailState.value,\n          onChange: emailChangeHandler,\n          onBlur: validateEmailHandler\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 154,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `${classes.control} ${passwordState.isValid === false ? classes.invalid : \"\"}`,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"password\",\n          children: \"Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 167,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          id: \"password\",\n          value: passwordState.value,\n          onChange: passwordChangeHandler,\n          onBlur: validatePasswordHandler\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 168,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.actions,\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          type: \"submit\",\n          className: classes.btn,\n          disabled: !formIsValid,\n          children: \"Login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 177,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 176,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 146,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Login, \"sXA87IfWTBz9hUxthjOp6XnFWmQ=\");\n\n_c = Login;\nexport default Login;\n\nvar _c;\n\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["React","useState","useEffect","useReducer","Card","classes","Button","emailReducer","state","action","type","value","val","isValid","includes","passwordReducer","trim","length","Login","props","formIsValid","setFormIsValid","emailState","dispatchEmail","passwordState","dispatchPassword","emailIsValid","passwordIsValid","console","log","identifier","setTimeout","clearTimeout","emailChangeHandler","event","target","passwordChangeHandler","validateEmailHandler","validatePasswordHandler","submitHandler","preventDefault","onLogin","login","control","invalid","actions","btn"],"sources":["/home/ree/WORKSPACE/TECH/React/03-starting-project/src/components/Login/Login.js"],"sourcesContent":["// useState와 useReducer 사용시기\n// useState는 주요 사용 state이다.\nimport React, { useState, useEffect, useReducer } from \"react\";\n\nimport Card from \"../UI/Card/Card\";\nimport classes from \"./Login.module.css\";\nimport Button from \"../UI/Button/Button\";\n\n// reducer 함수는 외부에 선언한다 이유는 함수 내부에서 어떤 데이터도 필요로하지않기때문\nconst emailReducer = (state, action) => {\n  if (action.type === \"USER_INPUT\") {\n    return {\n      value: action.val,\n      isValid: action.val.includes(\"@\"),\n    };\n  }\n  if (action.type === \"INPUT_BLUR\") {\n    return {\n      value: state.value,\n      isValid: state.value.includes(\"@\"),\n    };\n  }\n\n  return {\n    value: \"\",\n    isValid: false,\n  };\n};\n\nconst passwordReducer = (state, action) => {\n  if (action.type === \"USER_INPUT\") {\n    return {\n      value: action.val,\n      isValid: state.value.trim().length > 6,\n    };\n  }\n  if (action.type === \"INPUT_BLUR\") {\n    return {\n      value: state.value,\n      isValid: state.value.trim().length > 6,\n    };\n  }\n\n  return {\n    value: \"\",\n    isValid: false,\n  };\n};\n\nconst Login = (props) => {\n  // const [enteredEmail, setEnteredEmail] = useState(\"\");\n  // const [emailIsValid, setEmailIsValid] = useState();\n  // const [enteredPassword, setEnteredPassword] = useState(\"\");\n  // const [passwordIsValid, setPasswordIsValid] = useState();\n  const [formIsValid, setFormIsValid] = useState(false);\n\n  const [emailState, dispatchEmail] = useReducer(emailReducer, {\n    value: \"\",\n    isValid: null,\n  });\n\n  const [passwordState, dispatchPassword] = useReducer(passwordReducer, {\n    value: \"\",\n    isValid: null,\n  });\n\n  // useEffect(() => {\n  //   console.log(\"EFFECT RUNNING\");\n\n  //   return () => {\n  //     console.log(\"first CleanUp\");\n  //   };\n  // }, [enteredEmail]);\n\n  const { isValid: emailIsValid } = emailState;\n  const { isValid: passwordIsValid } = passwordState\n\n  useEffect(() => {\n    console.log(\"Checking form validity\")\n\n    // 타이머를 설정하면 타이머가 여러개 설정되었을시 마지막 타이머만 작동한다.\n    const identifier = setTimeout(() => {\n      console.log(\"TEST\")\n      setFormIsValid(\n        emailIsValid && passwordIsValid\n      )\n    }, 500);\n    console.log(emailIsValid)\n    // 클린업 함수 클린업 프로세스로 실행함\n    // 클린업 함수는 첫번째 컴포넌트 실행시 실행을 제외하고 이후에 실행시에 발생하는\n    // useEffect 실행 이전에 실행된다.\n    // DOM에 마운트가 해제될 때마다 실행된다.\n    // 정리하자면 모든 새로운 사이드 이펙트함수가 실행되기전 (처음실행 되기전에는 실행되지 않음)\n    // 컴포넌트가 제거되기 전에 실행된다.\n    return () => {\n      console.log(\"CLEAN UP\")\n      clearTimeout(identifier)\n    };\n    // 앱 초기 한번만 실행되거나 컴포넌트 변화 감지에서 작동함으로\n    // 의존성부분을 추가하여 변화에 동작할수있게 작성하면된다.\n    // useEffect는 주로 사이드이펙트에 부분에서 사용하며 http 리퀘스트, 키입력 데이터 저장등에 사용된다.\n    // 단 어떤 하나하나의 동작마다 useEffect가 작동한다면 불필요한 작업이되기에\n    // 필요한부분에서 작동하도록 하는 조치가 필요하다.\n    // http요청에대해서는 더더욱 트래픽이 증가하기에 알맞는 트리거를 설정할필요가있다.\n    // setFormIsValid(\n    //   enteredEmail.includes(\"@\") && enteredPassword.trim().length > 6\n    // );\n  }, [emailIsValid, passwordIsValid]);\n  // useEffect사용시 destructuring 사용 한경우가 위에 예시다.\n  // (중첩속성을 종속성을 추가함 []형태로)\n\n  const emailChangeHandler = (event) => {\n    dispatchEmail({ type: \"USER_INPUT\", val: event.target.value });\n\n    // 아래부분에서 발생할 수 있는문제는 다음과같다.\n    // 일전에 봤듯이 기존 스냅샷에 () => 와 같이 최산 스냅샷을 가져와서\n    // 업데이트를 해야하는데 아래 코드는 업데이트 state가 이전 state에 의존할수없는\n    // 두개의 스냅샷이 존재하기에 불가능한것이다.\n    // 리액트의 state 업데이트를 스케쥴링하는 방식에 주의하자.\n    // 비밀번호가 최신의 비밀번호로 업데이트 된 state가 아닐수있다는 의미이다.\n    // setFormIsValid(emailState.isValid && passwordState.isValid);\n  };\n\n  const passwordChangeHandler = (event) => {\n    dispatchPassword({ type: 'USER_INPUT', val: event.target.value })\n\n    // setFormIsValid(emailState.isValid && event.target.value.trim().length > 6);\n  };\n\n  const validateEmailHandler = () => {\n    // setEmailIsValid(emailState.isValid);\n    dispatchEmail({ type: \"INPUT_BLUR\" });\n  };\n\n  const validatePasswordHandler = () => {\n    dispatchPassword({ type:\"INPUT_BLUR\" })\n    // setPasswordIsValid(enteredPassword.trim().length > 6);\n  };\n\n  const submitHandler = (event) => {\n    event.preventDefault();\n    props.onLogin(emailState.value, passwordState.value);\n  };\n\n  return (\n    <Card className={classes.login}>\n      <form onSubmit={submitHandler}>\n        <div\n          className={`${classes.control} ${\n            emailState.isValid === false ? classes.invalid : \"\"\n          }`}\n        >\n          <label htmlFor=\"email\">E-Mail</label>\n          <input\n            type=\"email\"\n            id=\"email\"\n            value={emailState.value}\n            onChange={emailChangeHandler}\n            onBlur={validateEmailHandler}\n          />\n        </div>\n        <div\n          className={`${classes.control} ${\n            passwordState.isValid === false ? classes.invalid : \"\"\n          }`}\n        >\n          <label htmlFor=\"password\">Password</label>\n          <input\n            type=\"password\"\n            id=\"password\"\n            value={passwordState.value}\n            onChange={passwordChangeHandler}\n            onBlur={validatePasswordHandler}\n          />\n        </div>\n        <div className={classes.actions}>\n          <Button type=\"submit\" className={classes.btn} disabled={!formIsValid}>\n            Login\n          </Button>\n        </div>\n      </form>\n    </Card>\n  );\n};\n\nexport default Login;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}