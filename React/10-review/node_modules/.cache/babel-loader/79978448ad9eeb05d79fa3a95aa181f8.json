{"ast":null,"code":"var _jsxFileName = \"/home/ree/WORKSPACE/TECH/React/10-review/src/components/SimpleInput.js\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState, useRef } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst SimpleInput = props => {\n  _s();\n\n  const [enteredName, setEnteredName] = useState(\"\");\n  const [enteredNameTouched, setEenteredNameTouched] = useState(false);\n  const [formIsValid, setFormIsValid] = useState(false);\n  const enteredNameIsValid = enteredName.trim() !== '';\n  const nameInputIsInvalid = !enteredNameIsValid && enteredNameTouched;\n  useEffect(() => {\n    if (enteredNameIsValid) {\n      setFormIsValid(true);\n    } else {\n      setFormIsValid(false);\n    }\n  }, [enteredNameIsValid]);\n\n  const nameInputChangeHandler = event => {\n    setEnteredName(event.target.value);\n  };\n\n  const nameInputBlurHandler = event => {\n    setEenteredNameTouched(true);\n  };\n\n  const formSubmissionHandler = event => {\n    event.preventDefault();\n    setEenteredNameTouched(true);\n\n    if (!enteredNameIsValid) {\n      return;\n    } // console.log(enteredName);\n    // const enteredValue = nameInputRef.current.value;\n    // console.log(enteredValue);\n    // useState 와 ref 중에 선택해서 사용한다면\n    // 즉각적으로 유효성 검증에 사용하는경우 useState로 읽는것이 좋다 매순간 체크하기때문이기도하고 마지막 제출시 useState를 null로 두어 비우기도 되기때문이다.\n    // ref의 경우 한번만 제출하는 양식에 좋다. 매순간 굳이 업데이트가 필요하지않은경우에 사용하면 효율적으로 연산이 한번수행되기때문\n    // nameInputRef.current.value = \"\";\n    // 직접 바닐라 자바스크립트로 DOM에 접근하는 방법은 지양하도록해야한다.\n\n\n    setEnteredName(\"\");\n    setEenteredNameTouched(false);\n  };\n\n  const nameInputClasses = nameInputIsInvalid ? \"form-control invalid\" : \"form-control\";\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: formSubmissionHandler,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: nameInputClasses,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"name\",\n        children: \"Your Name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"name\",\n        onChange: nameInputChangeHandler,\n        onBlur: nameInputBlurHandler,\n        value: enteredName\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this), nameInputIsInvalid && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Name must not be empty.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 32\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-actions\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 5\n  }, this);\n};\n\n_s(SimpleInput, \"cH5TT//G+KtO5IXdGnX7/5CV2kM=\");\n\n_c = SimpleInput;\nexport default SimpleInput;\n\nvar _c;\n\n$RefreshReg$(_c, \"SimpleInput\");","map":{"version":3,"names":["useEffect","useState","useRef","SimpleInput","props","enteredName","setEnteredName","enteredNameTouched","setEenteredNameTouched","formIsValid","setFormIsValid","enteredNameIsValid","trim","nameInputIsInvalid","nameInputChangeHandler","event","target","value","nameInputBlurHandler","formSubmissionHandler","preventDefault","nameInputClasses"],"sources":["/home/ree/WORKSPACE/TECH/React/10-review/src/components/SimpleInput.js"],"sourcesContent":["import { useEffect, useState, useRef } from \"react\";\n\nconst SimpleInput = (props) => {\n  const [enteredName, setEnteredName] = useState(\"\");\n  const [enteredNameTouched, setEenteredNameTouched] = useState(false);\n  const [formIsValid, setFormIsValid] = useState(false);\n\n  const enteredNameIsValid = enteredName.trim() !== '';\n  const nameInputIsInvalid = !enteredNameIsValid && enteredNameTouched;\n\n  useEffect(() => {\n    if (enteredNameIsValid) {\n      setFormIsValid(true);\n    } else {\n      setFormIsValid(false);\n    }\n  },[enteredNameIsValid]);\n\n  const nameInputChangeHandler = (event) => {\n    setEnteredName(event.target.value);\n  };\n  const nameInputBlurHandler = event => {\n    setEenteredNameTouched(true);\n  }\n\n  const formSubmissionHandler = (event) => {\n    event.preventDefault();\n\n    setEenteredNameTouched(true);\n\n    if (!enteredNameIsValid) {\n      return;\n    }\n\n    // console.log(enteredName);\n    // const enteredValue = nameInputRef.current.value;\n    // console.log(enteredValue);\n\n    // useState 와 ref 중에 선택해서 사용한다면\n    // 즉각적으로 유효성 검증에 사용하는경우 useState로 읽는것이 좋다 매순간 체크하기때문이기도하고 마지막 제출시 useState를 null로 두어 비우기도 되기때문이다.\n    // ref의 경우 한번만 제출하는 양식에 좋다. 매순간 굳이 업데이트가 필요하지않은경우에 사용하면 효율적으로 연산이 한번수행되기때문\n    // nameInputRef.current.value = \"\";\n    // 직접 바닐라 자바스크립트로 DOM에 접근하는 방법은 지양하도록해야한다.\n    setEnteredName(\"\");\n    setEenteredNameTouched(false);\n  };\n\n\n  const nameInputClasses = nameInputIsInvalid\n    ? \"form-control invalid\"\n    : \"form-control\";\n\n  return (\n    <form onSubmit={formSubmissionHandler}>\n      <div className={nameInputClasses}>\n        <label htmlFor=\"name\">Your Name</label>\n        <input\n          type=\"text\"\n          id=\"name\"\n          onChange={nameInputChangeHandler}\n          onBlur={nameInputBlurHandler}\n          value={enteredName}\n        />\n        {nameInputIsInvalid && <p>Name must not be empty.</p>}\n      </div>\n      <div className=\"form-actions\">\n        <button>Submit</button>\n      </div>\n    </form>\n  );\n};\n\nexport default SimpleInput;\n"],"mappings":";;;AAAA,SAASA,SAAT,EAAoBC,QAApB,EAA8BC,MAA9B,QAA4C,OAA5C;;;AAEA,MAAMC,WAAW,GAAIC,KAAD,IAAW;EAAA;;EAC7B,MAAM,CAACC,WAAD,EAAcC,cAAd,IAAgCL,QAAQ,CAAC,EAAD,CAA9C;EACA,MAAM,CAACM,kBAAD,EAAqBC,sBAArB,IAA+CP,QAAQ,CAAC,KAAD,CAA7D;EACA,MAAM,CAACQ,WAAD,EAAcC,cAAd,IAAgCT,QAAQ,CAAC,KAAD,CAA9C;EAEA,MAAMU,kBAAkB,GAAGN,WAAW,CAACO,IAAZ,OAAuB,EAAlD;EACA,MAAMC,kBAAkB,GAAG,CAACF,kBAAD,IAAuBJ,kBAAlD;EAEAP,SAAS,CAAC,MAAM;IACd,IAAIW,kBAAJ,EAAwB;MACtBD,cAAc,CAAC,IAAD,CAAd;IACD,CAFD,MAEO;MACLA,cAAc,CAAC,KAAD,CAAd;IACD;EACF,CANQ,EAMP,CAACC,kBAAD,CANO,CAAT;;EAQA,MAAMG,sBAAsB,GAAIC,KAAD,IAAW;IACxCT,cAAc,CAACS,KAAK,CAACC,MAAN,CAAaC,KAAd,CAAd;EACD,CAFD;;EAGA,MAAMC,oBAAoB,GAAGH,KAAK,IAAI;IACpCP,sBAAsB,CAAC,IAAD,CAAtB;EACD,CAFD;;EAIA,MAAMW,qBAAqB,GAAIJ,KAAD,IAAW;IACvCA,KAAK,CAACK,cAAN;IAEAZ,sBAAsB,CAAC,IAAD,CAAtB;;IAEA,IAAI,CAACG,kBAAL,EAAyB;MACvB;IACD,CAPsC,CASvC;IACA;IACA;IAEA;IACA;IACA;IACA;IACA;;;IACAL,cAAc,CAAC,EAAD,CAAd;IACAE,sBAAsB,CAAC,KAAD,CAAtB;EACD,CApBD;;EAuBA,MAAMa,gBAAgB,GAAGR,kBAAkB,GACvC,sBADuC,GAEvC,cAFJ;EAIA,oBACE;IAAM,QAAQ,EAAEM,qBAAhB;IAAA,wBACE;MAAK,SAAS,EAAEE,gBAAhB;MAAA,wBACE;QAAO,OAAO,EAAC,MAAf;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QADF,eAEE;QACE,IAAI,EAAC,MADP;QAEE,EAAE,EAAC,MAFL;QAGE,QAAQ,EAAEP,sBAHZ;QAIE,MAAM,EAAEI,oBAJV;QAKE,KAAK,EAAEb;MALT;QAAA;QAAA;QAAA;MAAA,QAFF,EASGQ,kBAAkB,iBAAI;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QATzB;IAAA;MAAA;MAAA;MAAA;IAAA,QADF,eAYE;MAAK,SAAS,EAAC,cAAf;MAAA,uBACE;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IADF;MAAA;MAAA;MAAA;IAAA,QAZF;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AAkBD,CApED;;GAAMV,W;;KAAAA,W;AAsEN,eAAeA,WAAf"},"metadata":{},"sourceType":"module"}