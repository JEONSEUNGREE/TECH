{"ast":null,"code":"import { Component } from \"react\";\n\nclass ErrorBoundary extends Component {\n  constructor() {\n    super();\n    this.state = {\n      hasError: false\n    };\n  } // 일반적으로 리액트에서 try-catch문인 자바스크립트 형태를 사용할수없기에\n  // 다음과같이 사용한다.\n\n\n  componentDidCatch(error) {\n    //   리액트에 에러를 인자로 받아서 수행한다.\n    this.setState({\n      hasError: true\n    });\n  }\n\n  render() {\n    return this.props.children;\n  }\n\n}\n\nexport default ErrorBoundary;","map":{"version":3,"names":["Component","ErrorBoundary","constructor","state","hasError","componentDidCatch","error","setState","render","props","children"],"sources":["/home/ree/WORKSPACE/TECH/React/06-class-component/src/components/ErrorBoundary.js"],"sourcesContent":["import { Component } from \"react\";\n\nclass ErrorBoundary extends Component {\n  constructor() {\n    super();\n    this.state = {\n      hasError: false,\n    };\n  }\n  // 일반적으로 리액트에서 try-catch문인 자바스크립트 형태를 사용할수없기에\n  // 다음과같이 사용한다.\n  componentDidCatch(error) {\n    //   리액트에 에러를 인자로 받아서 수행한다.\n    this.setState({ hasError: true });\n  }\n\n  render() {\n    return this.props.children;\n  }\n}\n\nexport default ErrorBoundary;\n"],"mappings":"AAAA,SAASA,SAAT,QAA0B,OAA1B;;AAEA,MAAMC,aAAN,SAA4BD,SAA5B,CAAsC;EACpCE,WAAW,GAAG;IACZ;IACA,KAAKC,KAAL,GAAa;MACXC,QAAQ,EAAE;IADC,CAAb;EAGD,CANmC,CAOpC;EACA;;;EACAC,iBAAiB,CAACC,KAAD,EAAQ;IACvB;IACA,KAAKC,QAAL,CAAc;MAAEH,QAAQ,EAAE;IAAZ,CAAd;EACD;;EAEDI,MAAM,GAAG;IACP,OAAO,KAAKC,KAAL,CAAWC,QAAlB;EACD;;AAhBmC;;AAmBtC,eAAeT,aAAf"},"metadata":{},"sourceType":"module"}