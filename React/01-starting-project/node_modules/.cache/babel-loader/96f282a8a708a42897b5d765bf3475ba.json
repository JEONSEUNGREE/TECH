{"ast":null,"code":"var _jsxFileName = \"/home/ree/WORKSPACE/TECH/React/01-starting-project/src/components/UI/Button/Button.js\";\nimport React from \"react\";\nimport styles from './Button.css'; // module.css 임포트\n// import styled from \"styled-components\";\n// import \"./Button.css\";\n// // styled Component는 해당 컴포너트에만 Css 영향을 주고 다른 컴포넌트에 영향을 주지않음\n// // 따라서 중복된 이름의 Css의 문제를 피할수있다.\n// // 일반함수형 선언 대신 아래와같이 선언한다.\n// // ``백틱으로 태그드 템플릿 리터럴 선언\n// // 아래 버튼을 개발자도구로확인하면 클래스네임이 특이하게 생성되는데 고유한 이름을 갖게되는 형태이기때문이다.\n// const Button = styled.button`\n//   font: inherit;\n//   padding: 0.5rem 1.5rem;\n//   border: 1px solid #8b005d;\n//   color: white;\n//   background: #8b005d;\n//   box-shadow: 0 0 4px rgba(0, 0, 0, 0.26);\n//   cursor: pointer;\n//   width: 100%\n//   @media (min-width: 768px) {\n//     width: auto;\n//   }\n//   &:focus {\n//     outline: none;\n//   }\n//   &:hover,\n//   &:active {\n//     background: #ac0e77;\n//     border-color: #ac0e77;\n//     box-shadow: 0 0 8px rgba(0, 0, 0, 0.26);\n//   }\n// `;\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Button = props => {\n  return /*#__PURE__*/_jsxDEV(\"button\", {\n    type: props.type,\n    className: \"button\",\n    onClick: props.onClick,\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, this);\n};\n\n_c = Button;\nexport default Button;\n\nvar _c;\n\n$RefreshReg$(_c, \"Button\");","map":{"version":3,"sources":["/home/ree/WORKSPACE/TECH/React/01-starting-project/src/components/UI/Button/Button.js"],"names":["React","styles","Button","props","type","onClick","children"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,OAAOC,MAAP,MAAmB,cAAnB,C,CACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;;;;AAEA,MAAMC,MAAM,GAAGC,KAAK,IAAI;AACtB,sBACE;AAAQ,IAAA,IAAI,EAAEA,KAAK,CAACC,IAApB;AAA0B,IAAA,SAAS,EAAC,QAApC;AAA6C,IAAA,OAAO,EAAED,KAAK,CAACE,OAA5D;AAAA,cACGF,KAAK,CAACG;AADT;AAAA;AAAA;AAAA;AAAA,UADF;AAKD,CAND;;KAAMJ,M;AAQN,eAAeA,MAAf","sourcesContent":["import React from \"react\";\n\nimport styles from './Button.css';\n// module.css 임포트\n// import styled from \"styled-components\";\n\n// import \"./Button.css\";\n// // styled Component는 해당 컴포너트에만 Css 영향을 주고 다른 컴포넌트에 영향을 주지않음\n// // 따라서 중복된 이름의 Css의 문제를 피할수있다.\n// // 일반함수형 선언 대신 아래와같이 선언한다.\n// // ``백틱으로 태그드 템플릿 리터럴 선언\n// // 아래 버튼을 개발자도구로확인하면 클래스네임이 특이하게 생성되는데 고유한 이름을 갖게되는 형태이기때문이다.\n// const Button = styled.button`\n//   font: inherit;\n//   padding: 0.5rem 1.5rem;\n//   border: 1px solid #8b005d;\n//   color: white;\n//   background: #8b005d;\n//   box-shadow: 0 0 4px rgba(0, 0, 0, 0.26);\n//   cursor: pointer;\n//   width: 100%\n\n//   @media (min-width: 768px) {\n//     width: auto;\n//   }\n\n//   &:focus {\n//     outline: none;\n//   }\n\n\n//   &:hover,\n//   &:active {\n//     background: #ac0e77;\n//     border-color: #ac0e77;\n//     box-shadow: 0 0 8px rgba(0, 0, 0, 0.26);\n//   }\n// `;\n\nconst Button = props => {\n  return (\n    <button type={props.type} className=\"button\" onClick={props.onClick}>\n      {props.children}\n    </button>\n  );\n};\n\nexport default Button;\n"]},"metadata":{},"sourceType":"module"}