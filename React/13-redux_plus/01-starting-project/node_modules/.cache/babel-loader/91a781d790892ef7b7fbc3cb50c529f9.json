{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nconst cartSlice = createSlice({\n  name: \"cart\",\n  initialState: {\n    items: [],\n    totalQuantity: 0\n  },\n  reducers: {\n    addItemToCart(state, action) {\n      const newItem = action.payload;\n      state.totalQuantity++;\n\n      if (!existingItem) {\n        state.items.push({\n          id: newItem.id,\n          price: newItem.price,\n          quantity: 1,\n          totalPrice: newItem.price,\n          name: newItem.title\n        });\n        console.log(\"test\");\n      } else {\n        existingItem.quantity++;\n        existingItem.totalPrice = existingItem.totalPrice + newItem.price;\n      }\n    },\n\n    removeItemToCart(state, action) {\n      const id = action.payload;\n      const existingItem = state.items.find(item => item.id === id);\n      state.totalQuantity--;\n\n      if (existingItem.quantity === 1) {\n        state.items = state.items.filter(item => item.id !== id);\n      } else {\n        existingItem.quantity--;\n      }\n    }\n\n  }\n});\nexport const cartActions = cartSlice.actions;\nexport default cartSlice;","map":{"version":3,"names":["createSlice","cartSlice","name","initialState","items","totalQuantity","reducers","addItemToCart","state","action","newItem","payload","existingItem","push","id","price","quantity","totalPrice","title","console","log","removeItemToCart","find","item","filter","cartActions","actions"],"sources":["/home/ree/WORKSPACE/TECH/React/13-redux_plus/01-starting-project/src/store/cart-slice.js"],"sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\n\nconst cartSlice = createSlice({\n  name: \"cart\",\n  initialState: {\n    items: [],\n    totalQuantity: 0,\n  },\n  reducers: {\n    addItemToCart(state, action) {\n      const newItem = action.payload;\n      state.totalQuantity++;\n      if (!existingItem) {\n        state.items.push({\n          id: newItem.id,\n          price: newItem.price,\n          quantity: 1,\n          totalPrice: newItem.price,\n          name: newItem.title,\n        });\n        console.log(\"test\")\n      } else {\n        existingItem.quantity++;\n        existingItem.totalPrice = existingItem.totalPrice + newItem.price;\n      }\n  },\n    removeItemToCart(state, action) {\n      const id = action.payload;\n      const existingItem = state.items.find(item => item.id === id);\n      state.totalQuantity--;\n\n      if (existingItem.quantity === 1) {\n        state.items = state.items.filter(item => item.id !== id);\n      } else {\n        existingItem.quantity--;\n      }\n    },\n  },\n});\n\nexport const cartActions = cartSlice.actions;\n\nexport default cartSlice;"],"mappings":"AAAA,SAASA,WAAT,QAA4B,kBAA5B;AAEA,MAAMC,SAAS,GAAGD,WAAW,CAAC;EAC5BE,IAAI,EAAE,MADsB;EAE5BC,YAAY,EAAE;IACZC,KAAK,EAAE,EADK;IAEZC,aAAa,EAAE;EAFH,CAFc;EAM5BC,QAAQ,EAAE;IACRC,aAAa,CAACC,KAAD,EAAQC,MAAR,EAAgB;MAC3B,MAAMC,OAAO,GAAGD,MAAM,CAACE,OAAvB;MACAH,KAAK,CAACH,aAAN;;MACA,IAAI,CAACO,YAAL,EAAmB;QACjBJ,KAAK,CAACJ,KAAN,CAAYS,IAAZ,CAAiB;UACfC,EAAE,EAAEJ,OAAO,CAACI,EADG;UAEfC,KAAK,EAAEL,OAAO,CAACK,KAFA;UAGfC,QAAQ,EAAE,CAHK;UAIfC,UAAU,EAAEP,OAAO,CAACK,KAJL;UAKfb,IAAI,EAAEQ,OAAO,CAACQ;QALC,CAAjB;QAOAC,OAAO,CAACC,GAAR,CAAY,MAAZ;MACD,CATD,MASO;QACLR,YAAY,CAACI,QAAb;QACAJ,YAAY,CAACK,UAAb,GAA0BL,YAAY,CAACK,UAAb,GAA0BP,OAAO,CAACK,KAA5D;MACD;IACJ,CAjBS;;IAkBRM,gBAAgB,CAACb,KAAD,EAAQC,MAAR,EAAgB;MAC9B,MAAMK,EAAE,GAAGL,MAAM,CAACE,OAAlB;MACA,MAAMC,YAAY,GAAGJ,KAAK,CAACJ,KAAN,CAAYkB,IAAZ,CAAiBC,IAAI,IAAIA,IAAI,CAACT,EAAL,KAAYA,EAArC,CAArB;MACAN,KAAK,CAACH,aAAN;;MAEA,IAAIO,YAAY,CAACI,QAAb,KAA0B,CAA9B,EAAiC;QAC/BR,KAAK,CAACJ,KAAN,GAAcI,KAAK,CAACJ,KAAN,CAAYoB,MAAZ,CAAmBD,IAAI,IAAIA,IAAI,CAACT,EAAL,KAAYA,EAAvC,CAAd;MACD,CAFD,MAEO;QACLF,YAAY,CAACI,QAAb;MACD;IACF;;EA5BO;AANkB,CAAD,CAA7B;AAsCA,OAAO,MAAMS,WAAW,GAAGxB,SAAS,CAACyB,OAA9B;AAEP,eAAezB,SAAf"},"metadata":{},"sourceType":"module"}