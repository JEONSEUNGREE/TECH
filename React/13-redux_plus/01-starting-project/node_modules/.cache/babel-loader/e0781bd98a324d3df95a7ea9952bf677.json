{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nimport { uiActions } from \"./ui-slice\";\nconst cartSlice = createSlice({\n  name: \"cart\",\n  initialState: {\n    items: [],\n    totalQuantity: 0\n  },\n  // 리듀서는 비동기함수요청이나 변경을 할수없다(오버라이딩)\n  // 혹은 외부에서 강제로 변경할수없다.\n  // 따라서 비동기 처리를할경우 useEffect를 사용거나 thunk함수를 사용하는데\n  // thunk함수는 특정함수가 동작을 완료할때까지 대기하도록 돕는 함수이다.\n  reducers: {\n    addItemToCart(state, action) {\n      const newItem = action.payload;\n      console.log(newItem.id);\n      const existingItem = state.items.find(item => item.id === newItem.id);\n      state.totalQuantity++;\n\n      if (!existingItem) {\n        console.log(\"test\");\n        state.items.push({\n          id: newItem.id,\n          price: newItem.price,\n          quantity: 1,\n          totalPrice: newItem.price,\n          name: newItem.title\n        });\n      } else {\n        console.log(existingItem.quantity);\n        existingItem.quantity++;\n        existingItem.totalPrice = existingItem.totalPrice + newItem.price;\n      }\n    },\n\n    removeItemToCart(state, action) {\n      const id = action.payload;\n      console.log(id);\n      const existingItem = state.items.find(item => item.id === id);\n      state.totalQuantity--;\n\n      if (existingItem.quantity === 1) {\n        state.items = state.items.filter(item => item.id !== id);\n      } else {\n        existingItem.quantity--;\n      }\n    }\n\n  }\n});\nexport const sendCartData = cart => {\n  return async dispatch => {\n    dispatch(uiActions.showNotification({\n      status: \"pending\",\n      title: \"sending...\",\n      message: \"sending cart data!\"\n    }));\n\n    const sendRequeset = async () => {\n      const res = await fetch(\"https://react-http-dd4c9-default-rtdb.firebaseio.com/cart.json\", {\n        method: \"PUT\",\n        body: JSON.stringify(cart)\n      });\n\n      if (!res.ok) {\n        throw new Error(\"Sending cart data failed\");\n      }\n    };\n\n    try {\n      await sendRequeset();\n      dispatch(uiActions.showNotification({\n        status: \"Success\",\n        title: \"Success!\",\n        message: \"Success receive Data!\"\n      }));\n    } catch {\n      dispatch(uiActions.showNotification({\n        status: \"error\",\n        title: \"Error!\",\n        message: \"Error receive Data!\"\n      }));\n    }\n  };\n};\nexport const cartActions = cartSlice.actions;\nexport default cartSlice;","map":{"version":3,"names":["createSlice","uiActions","cartSlice","name","initialState","items","totalQuantity","reducers","addItemToCart","state","action","newItem","payload","console","log","id","existingItem","find","item","push","price","quantity","totalPrice","title","removeItemToCart","filter","sendCartData","cart","dispatch","showNotification","status","message","sendRequeset","res","fetch","method","body","JSON","stringify","ok","Error","cartActions","actions"],"sources":["/home/ree/WORKSPACE/TECH/React/13-redux_plus/01-starting-project/src/store/cart-slice.js"],"sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\n\nimport { uiActions } from \"./ui-slice\";\n\nconst cartSlice = createSlice({\n  name: \"cart\",\n  initialState: {\n    items: [],\n    totalQuantity: 0,\n  },\n  // 리듀서는 비동기함수요청이나 변경을 할수없다(오버라이딩)\n  // 혹은 외부에서 강제로 변경할수없다.\n  // 따라서 비동기 처리를할경우 useEffect를 사용거나 thunk함수를 사용하는데\n  // thunk함수는 특정함수가 동작을 완료할때까지 대기하도록 돕는 함수이다.\n  reducers: {\n    addItemToCart(state, action) {\n      const newItem = action.payload;\n      console.log(newItem.id);\n      const existingItem = state.items.find((item) => item.id === newItem.id);\n      state.totalQuantity++;\n      if (!existingItem) {\n        console.log(\"test\");\n        state.items.push({\n          id: newItem.id,\n          price: newItem.price,\n          quantity: 1,\n          totalPrice: newItem.price,\n          name: newItem.title,\n        });\n      } else {\n        console.log(existingItem.quantity);\n        existingItem.quantity++;\n        existingItem.totalPrice = existingItem.totalPrice + newItem.price;\n      }\n    },\n    removeItemToCart(state, action) {\n      const id = action.payload;\n      console.log(id);\n      const existingItem = state.items.find((item) => item.id === id);\n      state.totalQuantity--;\n\n      if (existingItem.quantity === 1) {\n        state.items = state.items.filter((item) => item.id !== id);\n      } else {\n        existingItem.quantity--;\n      }\n    },\n  },\n});\n\nexport const sendCartData = (cart) => {\n  return async (dispatch) => {\n    dispatch(\n      uiActions.showNotification({\n        status: \"pending\",\n        title: \"sending...\",\n        message: \"sending cart data!\",\n      })\n    );\n\n    const sendRequeset = async () => {\n      const res = await fetch(\n        \"https://react-http-dd4c9-default-rtdb.firebaseio.com/cart.json\",\n        {\n          method: \"PUT\",\n          body: JSON.stringify(cart),\n        }\n      );\n\n      if (!res.ok) {\n        throw new Error(\"Sending cart data failed\");\n      }\n    };\n\n    try {\n      await sendRequeset();\n      dispatch(\n        uiActions.showNotification({\n          status: \"Success\",\n          title: \"Success!\",\n          message: \"Success receive Data!\",\n        })\n      );\n    } catch {\n      dispatch(\n        uiActions.showNotification({\n          status: \"error\",\n          title: \"Error!\",\n          message: \"Error receive Data!\",\n        })\n      );\n    }\n  };\n};\n\nexport const cartActions = cartSlice.actions;\n\nexport default cartSlice;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}