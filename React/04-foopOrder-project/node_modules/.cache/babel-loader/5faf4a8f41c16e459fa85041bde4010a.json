{"ast":null,"code":"var _jsxFileName = \"/home/ree/WORKSPACE/TECH/React/04-foopOrder-project/src/store/CartProvider.js\",\n    _s = $RefreshSig$();\n\nimport React, { useReducer } from \"react\";\nimport CartContext from \"./Cart-Context\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst defaultCartState = {\n  items: [],\n  totalAmount: 0\n};\n\nconst cartReducer = (state, action) => {\n  if (action.type === \"ADD\") {\n    const existingCartItemIndex = state.items.findIndex(item => item.id === action.item.id);\n    const exstingCartItem = state.items[existingCartItemIndex];\n    let updatedItems;\n\n    if (exstingCartItem) {\n      const updatedItem = { ...exstingCartItem,\n        amount: exstingCartItem.amount + action.item.amount\n      };\n      updatedItems = [...state.items];\n      updatedItems[existingCartItemIndex] = updatedItem;\n    } else {\n      updatedItems = state.items.concat(action.item);\n    }\n\n    if (action.type === 'REMOVE') {\n      const existingCartItemIndex = state.items.findIndex(item => item.id === action.item.id);\n      const existingItem = state.items[existingCartItemIndex];\n      const updatedTotalAmount = state.totalAmount - existingItem.price;\n      let updatedItems;\n\n      if (existingItem.amount === 1) {} else {\n        const updatedItem = { ...existingItem,\n          amount: existingItem.amount - 1\n        };\n        updatedItems = [...state.items];\n        updatedItems[existingCartItemIndex] = updatedItem;\n      }\n\n      return {\n        items: updatedItems,\n        totalAmount: updatedTotalAmount\n      };\n    }\n\n    const updatedTotalAmount = state.totalAmount + action.item.price * action.item.amount;\n    return {\n      items: updatedItems,\n      totalAmount: updatedTotalAmount\n    };\n  }\n\n  return defaultCartState;\n};\n\nconst CartProvider = props => {\n  _s();\n\n  const [cartState, dispatchCartAction] = useReducer(cartReducer, defaultCartState);\n\n  const addItemToCartHandler = item => {\n    dispatchCartAction({\n      type: \"ADD\",\n      item: item\n    });\n  };\n\n  const removeItemFromCartHandler = id => {\n    dispatchCartAction({\n      type: \"REMOVE\",\n      id: id\n    });\n  };\n\n  const cartContext = {\n    item: cartState.items,\n    totalAmount: cartState.totalAmount,\n    addItem: addItemToCartHandler,\n    removeItem: removeItemFromCartHandler\n  };\n  return /*#__PURE__*/_jsxDEV(CartContext.Provider, {\n    value: cartContext,\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 88,\n    columnNumber: 5\n  }, this);\n};\n\n_s(CartProvider, \"PxEugEseoIJIbjFwtAJal5z5ClY=\");\n\n_c = CartProvider;\nexport default CartProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"CartProvider\");","map":{"version":3,"names":["React","useReducer","CartContext","defaultCartState","items","totalAmount","cartReducer","state","action","type","existingCartItemIndex","findIndex","item","id","exstingCartItem","updatedItems","updatedItem","amount","concat","existingItem","updatedTotalAmount","price","CartProvider","props","cartState","dispatchCartAction","addItemToCartHandler","removeItemFromCartHandler","cartContext","addItem","removeItem","children"],"sources":["/home/ree/WORKSPACE/TECH/React/04-foopOrder-project/src/store/CartProvider.js"],"sourcesContent":["import React, { useReducer } from \"react\";\n\nimport CartContext from \"./Cart-Context\";\n\nconst defaultCartState = {\n  items: [],\n  totalAmount: 0,\n};\n\nconst cartReducer = (state, action) => {\n  if (action.type === \"ADD\") {\n    const existingCartItemIndex = state.items.findIndex(\n      (item) => item.id === action.item.id\n    );\n\n    const exstingCartItem = state.items[existingCartItemIndex];\n\n    let updatedItems;\n    if (exstingCartItem) {\n      const updatedItem = {\n        ...exstingCartItem,\n        amount: exstingCartItem.amount + action.item.amount\n      };\n      updatedItems = [...state.items];\n      updatedItems[existingCartItemIndex] = updatedItem;\n    } else {\n      updatedItems = state.items.concat(action.item);\n    }\n\n    if (action.type === 'REMOVE') {\n      const existingCartItemIndex = state.items.findIndex(\n        (item) => item.id === action.item.id\n      );\n      const existingItem = state.items[existingCartItemIndex];\n      const updatedTotalAmount = state.totalAmount - existingItem.price;\n      let updatedItems;\n      if (existingItem.amount === 1) {\n      } else {\n        const updatedItem = { ...existingItem, amount: existingItem.amount - 1};\n        updatedItems = [...state.items];\n        updatedItems[existingCartItemIndex] = updatedItem;\n      }\n\n      return {\n        items: updatedItems,\n        totalAmount: updatedTotalAmount\n      }\n    }\n\n    const updatedTotalAmount =\n      state.totalAmount + action.item.price * action.item.amount;\n    return {\n      items: updatedItems,\n      totalAmount: updatedTotalAmount,\n    };\n  }\n  return defaultCartState;\n};\n\nconst CartProvider = (props) => {\n  const [cartState, dispatchCartAction] = useReducer(\n    cartReducer,\n    defaultCartState\n  );\n\n  const addItemToCartHandler = (item) => {\n    dispatchCartAction({\n      type: \"ADD\",\n      item: item,\n    });\n  };\n\n  const removeItemFromCartHandler = (id) => {\n    dispatchCartAction({\n      type: \"REMOVE\",\n      id: id,\n    });\n  };\n\n  const cartContext = {\n    item: cartState.items,\n    totalAmount: cartState.totalAmount,\n    addItem: addItemToCartHandler,\n    removeItem: removeItemFromCartHandler,\n  };\n\n  return (\n    <CartContext.Provider value={cartContext}>\n      {props.children}\n    </CartContext.Provider>\n  );\n};\n\nexport default CartProvider;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}