{"ast":null,"code":"var _jsxFileName = \"/home/ree/WORKSPACE/TECH/React/04-foopOrder-project/src/store/CartProvider.js\",\n    _s = $RefreshSig$();\n\nimport React, { useReducer } from \"react\";\nimport CartContext from \"./Cart-Context\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst defaultCartState = {\n  items: [],\n  totalAmount: 0\n};\n\nconst cartReducer = (state, action) => {\n  if (action.type === \"ADD\") {\n    const existingCartItemIndex = state.items.findIndex(item => item.id === action.item.id);\n    const exstingCartItem = state.items[existingCartItemIndex];\n    let updatedItem;\n    let updatedItems;\n\n    if (exstingCartItem) {\n      updatedItem = { ...exstingCartItem,\n        amount: exstingCartItem.amount + action.item.amount\n      };\n      updatedItems = [...state.items];\n      updatedItems = [existingCartItemIndex] = updatedItem;\n    } // const updatedItems = state.items.concat(action.item);\n\n\n    const updatedTotalAmount = state.totalAmount + action.item.price * action.item.amount;\n    return {\n      items: updatedItems,\n      totalAmount: updatedTotalAmount\n    };\n  }\n\n  return defaultCartState;\n};\n\nconst CartProvider = props => {\n  _s();\n\n  const [cartState, dispatchCartAction] = useReducer(cartReducer, defaultCartState);\n\n  const addItemToCartHandler = item => {\n    dispatchCartAction({\n      type: \"ADD\",\n      item: item\n    });\n  };\n\n  const removeItemFromCartHandler = id => {\n    dispatchCartAction({\n      type: \"REMOVE\",\n      id: id\n    });\n  };\n\n  const cartContext = {\n    item: cartState.items,\n    totalAmount: cartState.totalAmount,\n    addItem: addItemToCartHandler,\n    removeItem: removeItemFromCartHandler\n  };\n  return /*#__PURE__*/_jsxDEV(CartContext.Provider, {\n    value: cartContext,\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 69,\n    columnNumber: 5\n  }, this);\n};\n\n_s(CartProvider, \"PxEugEseoIJIbjFwtAJal5z5ClY=\");\n\n_c = CartProvider;\nexport default CartProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"CartProvider\");","map":{"version":3,"names":["React","useReducer","CartContext","defaultCartState","items","totalAmount","cartReducer","state","action","type","existingCartItemIndex","findIndex","item","id","exstingCartItem","updatedItem","updatedItems","amount","updatedTotalAmount","price","CartProvider","props","cartState","dispatchCartAction","addItemToCartHandler","removeItemFromCartHandler","cartContext","addItem","removeItem","children"],"sources":["/home/ree/WORKSPACE/TECH/React/04-foopOrder-project/src/store/CartProvider.js"],"sourcesContent":["import React, { useReducer } from \"react\";\n\nimport CartContext from \"./Cart-Context\";\n\nconst defaultCartState = {\n  items: [],\n  totalAmount: 0,\n};\n\nconst cartReducer = (state, action) => {\n  if (action.type === \"ADD\") {\n    const existingCartItemIndex = state.items.findIndex(\n      (item) => item.id === action.item.id\n    );\n\n    const exstingCartItem = state.items[existingCartItemIndex];\n\n    let updatedItem;\n    let updatedItems;\n    \n    if (exstingCartItem) {\n      updatedItem = {\n        ...exstingCartItem,\n        amount: exstingCartItem.amount + action.item.amount\n      };\n      updatedItems = [...state.items];\n      updatedItems = [existingCartItemIndex] = updatedItem;\n    }\n\n    // const updatedItems = state.items.concat(action.item);\n    const updatedTotalAmount =\n      state.totalAmount + action.item.price * action.item.amount;\n    return {\n      items: updatedItems,\n      totalAmount: updatedTotalAmount,\n    };\n  }\n  return defaultCartState;\n};\n\nconst CartProvider = (props) => {\n  const [cartState, dispatchCartAction] = useReducer(\n    cartReducer,\n    defaultCartState\n  );\n\n  const addItemToCartHandler = (item) => {\n    dispatchCartAction({\n      type: \"ADD\",\n      item: item,\n    });\n  };\n\n  const removeItemFromCartHandler = (id) => {\n    dispatchCartAction({\n      type: \"REMOVE\",\n      id: id,\n    });\n  };\n\n  const cartContext = {\n    item: cartState.items,\n    totalAmount: cartState.totalAmount,\n    addItem: addItemToCartHandler,\n    removeItem: removeItemFromCartHandler,\n  };\n\n  return (\n    <CartContext.Provider value={cartContext}>\n      {props.children}\n    </CartContext.Provider>\n  );\n};\n\nexport default CartProvider;\n"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,QAAkC,OAAlC;AAEA,OAAOC,WAAP,MAAwB,gBAAxB;;AAEA,MAAMC,gBAAgB,GAAG;EACvBC,KAAK,EAAE,EADgB;EAEvBC,WAAW,EAAE;AAFU,CAAzB;;AAKA,MAAMC,WAAW,GAAG,CAACC,KAAD,EAAQC,MAAR,KAAmB;EACrC,IAAIA,MAAM,CAACC,IAAP,KAAgB,KAApB,EAA2B;IACzB,MAAMC,qBAAqB,GAAGH,KAAK,CAACH,KAAN,CAAYO,SAAZ,CAC3BC,IAAD,IAAUA,IAAI,CAACC,EAAL,KAAYL,MAAM,CAACI,IAAP,CAAYC,EADN,CAA9B;IAIA,MAAMC,eAAe,GAAGP,KAAK,CAACH,KAAN,CAAYM,qBAAZ,CAAxB;IAEA,IAAIK,WAAJ;IACA,IAAIC,YAAJ;;IAEA,IAAIF,eAAJ,EAAqB;MACnBC,WAAW,GAAG,EACZ,GAAGD,eADS;QAEZG,MAAM,EAAEH,eAAe,CAACG,MAAhB,GAAyBT,MAAM,CAACI,IAAP,CAAYK;MAFjC,CAAd;MAIAD,YAAY,GAAG,CAAC,GAAGT,KAAK,CAACH,KAAV,CAAf;MACAY,YAAY,GAAG,CAACN,qBAAD,IAA0BK,WAAzC;IACD,CAjBwB,CAmBzB;;;IACA,MAAMG,kBAAkB,GACtBX,KAAK,CAACF,WAAN,GAAoBG,MAAM,CAACI,IAAP,CAAYO,KAAZ,GAAoBX,MAAM,CAACI,IAAP,CAAYK,MADtD;IAEA,OAAO;MACLb,KAAK,EAAEY,YADF;MAELX,WAAW,EAAEa;IAFR,CAAP;EAID;;EACD,OAAOf,gBAAP;AACD,CA7BD;;AA+BA,MAAMiB,YAAY,GAAIC,KAAD,IAAW;EAAA;;EAC9B,MAAM,CAACC,SAAD,EAAYC,kBAAZ,IAAkCtB,UAAU,CAChDK,WADgD,EAEhDH,gBAFgD,CAAlD;;EAKA,MAAMqB,oBAAoB,GAAIZ,IAAD,IAAU;IACrCW,kBAAkB,CAAC;MACjBd,IAAI,EAAE,KADW;MAEjBG,IAAI,EAAEA;IAFW,CAAD,CAAlB;EAID,CALD;;EAOA,MAAMa,yBAAyB,GAAIZ,EAAD,IAAQ;IACxCU,kBAAkB,CAAC;MACjBd,IAAI,EAAE,QADW;MAEjBI,EAAE,EAAEA;IAFa,CAAD,CAAlB;EAID,CALD;;EAOA,MAAMa,WAAW,GAAG;IAClBd,IAAI,EAAEU,SAAS,CAAClB,KADE;IAElBC,WAAW,EAAEiB,SAAS,CAACjB,WAFL;IAGlBsB,OAAO,EAAEH,oBAHS;IAIlBI,UAAU,EAAEH;EAJM,CAApB;EAOA,oBACE,QAAC,WAAD,CAAa,QAAb;IAAsB,KAAK,EAAEC,WAA7B;IAAA,UACGL,KAAK,CAACQ;EADT;IAAA;IAAA;IAAA;EAAA,QADF;AAKD,CAhCD;;GAAMT,Y;;KAAAA,Y;AAkCN,eAAeA,YAAf"},"metadata":{},"sourceType":"module"}