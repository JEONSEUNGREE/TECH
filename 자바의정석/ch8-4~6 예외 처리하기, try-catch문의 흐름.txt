ch8-4~6 예외 처리하기, try-catch문의 흐름

try-catch문

try{
//예외가 발생할 가능성이 있는 문장들
} catch(Exception e1){
//Exception1이 발생했을 경우, 이를 처리하기 위한 문장을 적는다.
}catch(Exception e2){
//Exception2이 발생했을 경우, 이를 처리하기 위한 문장을 적는다.
}
if문과 달리 {} 설정 필수

예외처리가 만일 안되면 프로그램이 비정상적 종료하게됨
만일 예외발생시 다음문장이있어도 실행하지않고 바로 catch문으로 이동하게 됨 

ArithmeticException 값 예외 발생
Exception 모든 예외클래스의 조상이기때문에 모두 예외처리가능
catch문이 여러개여도 하나에 걸리면 처리하고 catcha문을 모두 빠져나옴 

Ex)
  public static void main(String[] args) {
        System.out.println(1);
        try {
            System.out.println(4);
            System.out.println(5 / 0);
        } catch (ArithmeticException arithmeticException) {
            if (arithmeticException instanceof ArithmeticException) {
                System.out.println("e");
            }
        } catch (Exception e) {
            System.out.println("exception");
        }
        System.out.println(1);
    }

